buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
  }
}

apply plugin: "org.sonarqube"
sonarqube {

    properties  {
       // property "sonar.analysis.mode", "publish"
        property "sonar.android.lint.report", "app/build/reports/lint-results.xml"
        property "sonar.projectName", "AndroidCIBuild"
       // property "sonar.projectKey", "android_ci"
        property "sonar.sources", "src/main/java"
        property "sonar.language", "java"
  
        property "sonar.androidLint.reportPaths", "app/build/reports/lint-results.xml"
       property "sonar.profile", "Android Lint"
    }
}



apply plugin: 'com.android.application'

android {
  compileSdkVersion 27
  buildToolsVersion '27.0.1'

  defaultConfig {
    applicationId 'com.sqisland.android.test_demo'
    minSdkVersion 15
    targetSdkVersion 27
    versionCode 1
    versionName '1.0.0'

    testInstrumentationRunner 'com.sqisland.android.test_demo.MockTestRunner'
  
  
 lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
        // if true, emit full/absolute paths to files with errors (true by default)
        //absolutePaths true
        // if true, check all issues, including those that are off by default
        checkAllWarnings true
        // if true, treat all warnings as errors
        warningsAsErrors true
        // turn off checking the given issue id's
        disable 'TypographyFractions','TypographyQuotes'
        // turn on the given issue id's
        enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // check *only* the given issue id's
        check 'NewApi', 'InlinedApi'
        // if true, don't include source code lines in the error output
        noLines true
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true
        // if true, generate a text report of issues (false by default)
        textReport true
        // location to write the output; can be a file or 'stdout'
        textOutput 'stdout'
        // if true, generate an XML report for use by for example Jenkins
        xmlReport false
        // file to write report to (if not specified, defaults to lint-results.xml)
        xmlOutput file("app/build/reports/lint-results.xml")
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // optional path to report (default will be lint-results.html in the builddir)
        htmlOutput file("app/build/reports/lint-results.html")

        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds true
        // Set the severity of the given issues to fatal (which means they will be
        // checked during release builds (even if the lint target is not included)
        fatal 'NewApi', 'InlineApi'
        // Set the severity of the given issues to error
        error 'Wakelock', 'TextViewEdits'
        // Set the severity of the given issues to warning
        warning 'ResourceAsColor'
        // Set the severity of the given issues to ignore (same as disabling the check)
        ignore 'TypographyQuotes'
    }
  
  
  }

  buildTypes {
    debug {
      testCoverageEnabled true
    }
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }
}

final DAGGER_VERSION = '2.13'
final RUNNER_VERSION = '1.0.1'
final ESPRESSO_VERSION = '3.0.1'

dependencies {
  implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
  annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
  provided 'javax.annotation:jsr250-api:1.0'
  implementation 'joda-time:joda-time:2.9.9'

  testImplementation 'junit:junit:4.12'
  testImplementation 'com.google.truth:truth:0.34'

  androidTestImplementation "com.android.support.test:runner:${RUNNER_VERSION}"
  androidTestImplementation "com.android.support.test:rules:${RUNNER_VERSION}"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"
  androidTestImplementation "com.android.support.test.espresso:espresso-intents:${ESPRESSO_VERSION}"
  androidTestImplementation 'org.mockito:mockito-android:2.12.0'
  androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
}


